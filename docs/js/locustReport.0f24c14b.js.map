{"version":3,"sources":["webpack:///./src/views/locustReport/list.vue","webpack:///./src/views/locustReport/list.vue?c0be","webpack:///./src/utils/request.js","webpack:///./src/api/locustReport.js"],"names":["columns","data-source","data","scroll","bodyCell","record","column","text","dataIndex","to","id","key","deletes","title","width","ellipsis","setup","query","currentRoute","value","locustReport","locust","locustId","then","res","console","log","code","message","success","content","duration","location","reload","result","__exports__","render","allURL","process","VUE_APP_FLAG","VUE_APP_BASEURL","request","axios","create","baseURL","timeout","defaults","headers","post","errorHandler","error","response","token","localStorage","getItem","status","notification","description","window","href","isLogin","router","useRouter","push","Promise","reject","interceptors","use","config","locustReportGet","method","url","params","locustReportDetail","locustReportDel"],"mappings":"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","file":"js/locustReport.0f24c14b.js","sourcesContent":["\r\n<template>\r\n    <a-table :columns=\"columns\" :data-source=\"data\" :scroll=\"{ y: 800 }\">\r\n      <template #bodyCell=\"{ record, column ,text}\">\r\n        <template v-if=\"column.dataIndex === 'name'\">\r\n          <router-link :to=\"{ path: '/locustReport/ditail', query: { id: record.id } }\">\r\n            <a>{{text}}</a>\r\n          </router-link>\r\n         </template>\r\n        <template v-if=\"column.key === 'operation'\">\r\n          <a @click=\"deletes(record)\">Delete</a> \r\n          \r\n        </template>\r\n      </template>\r\n    </a-table>\r\n  </template>\r\n  <script>\r\n  import { defineComponent,ref } from \"vue\";\r\n  import { locustReportGet, locustReportDel } from \"@/api/locustReport\";\r\n  \r\n  const columns = [\r\n    {\r\n      title: \"Full Name\",\r\n      width: \"20%\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"locust\",\r\n      width: \"20%\",\r\n      dataIndex: \"locust_name\",\r\n      key: \"locust_name\",\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"createtime\",\r\n      dataIndex: \"create_time\",\r\n      key: \"create_time\",\r\n      width: \"20%\",\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"operation\",\r\n      width: 120,\r\n    },\r\n  ];\r\n  import { message} from \"ant-design-vue\";\r\n  import { useRouter } from \"vue-router\";\r\n\r\n  export default defineComponent({\r\n    setup() {\r\n\r\n        let data =ref()\r\n         const query = useRouter().currentRoute.value.query;\r\n         locustReportGet({locust:query.locustId}).then((res) => {\r\n            data.value = res\r\n            console.log(data)\r\n        })\r\n        const deletes = (record) => {\r\n            locustReportDel(record.id).then((res) => {\r\n            if (res.code == 200) {\r\n                message.success({\r\n                content: \"删除成功！\",\r\n                duration: 5,\r\n                });\r\n                location.reload();\r\n            } else {\r\n                message.success({\r\n                content: \"删除失败！\",\r\n                duration: 5,\r\n                });\r\n            }\r\n    \r\n            console.log(res);\r\n            console.log(res.data.data.result);\r\n            });\r\n        };\r\n    \r\n  \r\n      return {\r\n        deletes,\r\n        data,\r\n        columns,\r\n      };\r\n  }});\r\n  </script>\r\n  \r\n  ","import { render } from \"./list.vue?vue&type=template&id=11168f8a\"\nimport script from \"./list.vue?vue&type=script&lang=js\"\nexport * from \"./list.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\zjy\\\\GitHub\\\\vue_apitest\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import axios from 'axios'\r\n// import store from '@/store'\r\n// import storage from 'store'\r\nimport notification from 'ant-design-vue/es/notification'\r\n// import { VueAxios } from './axios'\r\n// import { token } from '@/store/mutation-types'\r\nimport { useRouter } from 'vue-router';\r\n\r\nlet allURL;\r\nif (process.env.VUE_APP_FLAG == \"dev\") {\r\n  allURL = process.env.VUE_APP_BASEURL;\r\n} else{\r\n  allURL = \"https://www.zaojingyoutu.top:8000/api/\";\r\n}\r\n\r\n\r\n// 创建 axios 实例\r\nconst request = axios.create({\r\n  // API 请求的默认前缀\r\n  baseURL: allURL,\r\n  timeout: 300000 // 请求超时时间\r\n})\r\nrequest.defaults.headers.post['Content-Type'] = 'application/json;charset=UTF-8';//配置请求头信息。\r\n// 异常拦截处理器\r\nconst errorHandler = (error) => {\r\n  if (error.response) {\r\n    const data = error.response.data\r\n    // 从 localstorage 获取 token\r\n    const token = localStorage.getItem(\"token\")\r\n    if (error.response.status === 403) {\r\n      notification.error({\r\n        message: 'Forbidden',\r\n        description: data.message\r\n      })\r\n      window.location.href=\"#/login\";\r\n      // const router = useRouter();\r\n      // router.push(\"/login\")\r\n\r\n    }\r\n    if (error.response.status === 401 && !(data.result && data.result.isLogin)) {\r\n      notification.error({\r\n        message: 'Unauthorized',\r\n        description: 'Authorization verification failed'\r\n\r\n      })\r\n      if (token) {\r\n        // store.dispatch('Logout').then(() => {\r\n        //   setTimeout(() => {\r\n        //     window.location.reload()\r\n        //   }, 1500)\r\n        window.location.reload()\r\n        // })\r\n      }\r\n      // window.location.href=\"/login\";\r\n      const router = useRouter();\r\n      router.push(\"/login\")\r\n    }\r\n\r\n  }\r\n  return Promise.reject(error)\r\n}\r\n\r\n// request interceptor\r\nrequest.interceptors.request.use(config => {\r\n  const token = localStorage.getItem(\"token\")\r\n  // 如果 token 存在\r\n  // 让每个请求携带自定义 token 请根据实际情况自行修改\r\n  if (token) {\r\n    config.headers['Authorization'] = token\r\n  }\r\n  return config\r\n}, errorHandler)\r\n\r\n// response interceptor\r\nrequest.interceptors.response.use((response) => {\r\n  if(typeof response.data != 'string'){\r\n    response.data['status'] = response.status\r\n}\r\n  return response.data\r\n}, errorHandler)\r\n\r\n// const installer = {\r\n//   vm: {},\r\n//   install (Vue) {\r\n//     Vue.use(VueAxios, request)\r\n//   }\r\n// }\r\n\r\nexport default request\r\n\r\n// export {\r\n//   // installer as VueAxios,\r\n//   request as axios\r\n// }\r\n","import request from '@/utils/request'\r\nexport function locustReportGet(data){\r\n    return request.request({\r\n        method: \"get\",\r\n        url: \"locustReport/\",\r\n        params: data,\r\n    })\r\n}\r\nexport function locustReportDetail(id){\r\n    return request.request({\r\n        method: \"get\",\r\n        url: \"locustReport/\" + id,\r\n\r\n    })\r\n}\r\n\r\n\r\nexport function locustReportDel(id){\r\n    return request.request({\r\n        method: \"delete\",\r\n        url: \"locustReport/\" + id +\"/\",\r\n    })\r\n}"],"sourceRoot":""}